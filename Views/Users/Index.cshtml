@model IEnumerable<ProyectoTestMVC.Models.User>
    @{
    ViewData["Title"] = "Usuarios";
    }

    <!-- Estilos CSS adicionales -->
    <style>
        .users-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px 15px 0 0;
            padding: 2rem;
            margin-bottom: 0;
        }

        .stats-card {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 12px;
            padding: 1.5rem;
            text-align: center;
            color: white;
            transition: all 0.3s ease;
        }

            .stats-card:hover {
                background: rgba(255, 255, 255, 0.2);
                transform: translateY(-2px);
            }

        .stats-number {
            font-size: 2rem;
            font-weight: bold;
            display: block;
            margin-bottom: 0.5rem;
        }

        .stats-label {
            font-size: 0.9rem;
            opacity: 0.9;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .stats-icon {
            font-size: 2.5rem;
            opacity: 0.7;
            margin-bottom: 1rem;
        }

        .search-filter-section {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border: 1px solid #e9ecef;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .table-container {
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .table thead th {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: none;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.5px;
            padding: 1.2rem 1rem;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .table tbody tr {
            transition: all 0.3s ease;
            border: none;
        }

            .table tbody tr:hover {
                background: linear-gradient(135deg, #f8f9fa 0%, #e3f2fd 100%);
                transform: translateY(-1px);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            }

        .table tbody td {
            padding: 1.2rem 1rem;
            border-top: 1px solid #f1f3f4;
            vertical-align: middle;
        }

        .user-email {
            font-weight: 600;
            color: #1976d2;
            text-decoration: none;
            transition: all 0.2s ease;
            display: inline-flex;
            align-items: center;
        }

            .user-email:hover {
                color: #0d47a1;
                text-decoration: underline;
            }

            .user-email i {
                margin-right: 0.5rem;
                font-size: 1rem;
            }

        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: inline-flex;
            align-items: center;
            min-width: 80px;
            justify-content: center;
        }

        .status-active {
            background: linear-gradient(135deg, #4caf50 0%, #81c784 100%);
            color: white;
            box-shadow: 0 2px 8px rgba(76, 175, 80, 0.3);
        }

        .status-inactive {
            background: linear-gradient(135deg, #757575 0%, #bdbdbd 100%);
            color: white;
            box-shadow: 0 2px 8px rgba(117, 117, 117, 0.3);
        }

        .btn-action {
            width: 38px;
            height: 38px;
            border-radius: 10px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin: 0 3px;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

            .btn-action:hover {
                transform: translateY(-3px);
                box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
            }

            .btn-action.btn-outline-primary:hover {
                background: linear-gradient(135deg, #2196f3 0%, #64b5f6 100%);
                border-color: transparent;
                color: white;
            }

            .btn-action.btn-outline-info:hover {
                background: linear-gradient(135deg, #00bcd4 0%, #4dd0e1 100%);
                border-color: transparent;
                color: white;
            }

            .btn-action.btn-outline-danger:hover {
                background: linear-gradient(135deg, #f44336 0%, #e57373 100%);
                border-color: transparent;
                color: white;
            }

        .date-display {
            font-weight: 500;
            color: #495057;
        }

        .date-time {
            font-size: 0.85rem;
            color: #6c757d;
            display: block;
            margin-top: 0.2rem;
        }

        .last-login-display {
            padding: 0.4rem 0.8rem;
            background: #e3f2fd;
            border-radius: 8px;
            color: #1976d2;
            font-weight: 500;
            font-size: 0.85rem;
        }

        .never-logged {
            padding: 0.4rem 0.8rem;
            background: #fff3e0;
            border-radius: 8px;
            color: #f57c00;
            font-weight: 500;
            font-size: 0.85rem;
            font-style: italic;
        }

        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: #6c757d;
        }

            .empty-state i {
                font-size: 4rem;
                margin-bottom: 1.5rem;
                opacity: 0.5;
                color: #dee2e6;
            }

        .user-card {
            border: 1px solid #e9ecef;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            background: white;
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

            .user-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            }

        @@media (max-width: 768px) {
            .users-header {
                padding: 1.5rem;
                text-align: center;
            }

            .stats-card {
                margin-bottom: 1rem;
            }

            .search-filter-section {
                padding: 1rem;
            }

            .btn-action {
                width: 32px;
                height: 32px;
                font-size: 0.8rem;
            }

            .table-responsive {
                border-radius: 10px;
            }

            .user-card {
                padding: 1rem;
            }
        }

        @@media (max-width: 576px) {
            .users-header h1 {
                font-size: 1.5rem;
            }

            .stats-number {
                font-size: 1.5rem;
            }

            .stats-icon {
                font-size: 2rem;
            }
        }
    </style>

    <div class="container-fluid py-4">
        <!-- Header con estadísticas -->
        <div class="users-header">
            <div class="row align-items-center">
                <div class="col-lg-6 mb-3 mb-lg-0">
                    <h1 class="h2 mb-2">
                        <i class="fa fa-users me-2"></i>
                        Gestión de Usuarios
                    </h1>
                    <p class="mb-0 opacity-75">Administra todos los usuarios del sistema</p>
                </div>
                <div class="col-lg-6">
                    <div class="row g-3">
                        <div class="col-6 col-md-4">
                            <div class="stats-card">
                                <i class="fa fa-users stats-icon"></i>
                                <span class="stats-number">@Model.Count()</span>
                                <span class="stats-label">Total</span>
                            </div>
                        </div>
                        <div class="col-6 col-md-4">
                            <div class="stats-card">
                                <i class="fa fa-user-check stats-icon"></i>
                                <span class="stats-number">@Model.Count(u => u.IsActive)</span>
                                <span class="stats-label">Activos</span>
                            </div>
                        </div>
                        <div class="col-12 col-md-4">
                            <div class="stats-card">
                                <i class="fa fa-user-times stats-icon"></i>
                                <span class="stats-number">@Model.Count(u => !u.IsActive)</span>
                                <span class="stats-label">Inactivos</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sección de filtros y búsqueda -->
        <div class="search-filter-section">
            <div class="row g-3 align-items-end">
                <div class="col-md-6">
                    <label class="form-label fw-semibold">
                        <i class="fa fa-search me-1"></i>Buscar Usuario
                    </label>
                    <input type="text" class="form-control form-control-lg" id="searchInput" placeholder="Buscar por email...">
                </div>
                <div class="col-md-3">
                    <label class="form-label fw-semibold">Estado</label>
                    <select class="form-select form-select-lg" id="statusFilter">
                        <option value="">Todos</option>
                        <option value="active">Activos</option>
                        <option value="inactive">Inactivos</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <button class="btn btn-outline-secondary btn-lg w-100" onclick="clearFilters()">
                        <i class="fa fa-times me-1"></i>Limpiar Filtros
                    </button>
                </div>
            </div>
        </div>

        <!-- Botón de nuevo usuario y contador -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div>
                <span class="text-muted fw-medium" id="recordCount">Mostrando @Model.Count() usuarios</span>
            </div>
            <a asp-action="Create" class="btn btn-success btn-lg shadow">
                <i class="fa fa-user-plus me-2"></i>Nuevo Usuario
            </a>
        </div>

        <!-- Tabla de usuarios -->
        <div class="table-container">
            <div class="table-responsive">
                @if (Model.Any())
            {
                <table class="table table-hover align-middle mb-0" id="usersTable">
                    <thead>
                        <tr>
                            <th><i class="fa fa-envelope me-1"></i>Email</th>
                            <th class="text-center"><i class="fa fa-toggle-on me-1"></i>Estado</th>
                            <th><i class="fa fa-sign-in-alt me-1"></i>Último Login</th>
                            <th><i class="fa fa-calendar-plus me-1"></i>Creado</th>
                            <th><i class="fa fa-calendar-check me-1"></i>Actualizado</th>
                            <th class="text-center"><i class="fa fa-cog me-1"></i>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var usr in Model)
                        {
                        <tr class="user-row" data-email="@usr.Email.ToLower()" data-status="@(usr.IsActive ? "active" : "inactive")">
                            <td>
                                <a asp-action="Details" asp-route-id="@usr.Id" class="user-email">
                                    <i class="fa fa-user"></i>
                                    @usr.Email
                                </a>
                            </td>
                            <td class="text-center">
                                @if (usr.IsActive)
                                    {
                                <span class="status-badge status-active">
                                    <i class="fa fa-check me-1"></i>
                                    Activo
                                </span>
                                    }
                                    else
                                    {
                                <span class="status-badge status-inactive">
                                    <i class="fa fa-times me-1"></i>
                                    Inactivo
                                </span>
                                    }
                            </td>
                            <td>
                                @if (usr.LastLogin.HasValue)
                                    {
                                <div class="last-login-display">
                                    <i class="fa fa-clock me-1"></i>
                                    @usr.LastLogin.Value.ToString("dd/MM/yyyy")
                                    <span class="date-time">@usr.LastLogin.Value.ToString("HH:mm")</span>
                                </div>
                                    }
                                    else
                                    {
                                <div class="never-logged">
                                    <i class="fa fa-exclamation-triangle me-1"></i>
                                    Nunca
                                </div>
                                    }
                            </td>
                            <td>
                                <div class="date-display">
                                    @usr.CreatedAt.ToString("dd/MM/yyyy")
                                    <span class="date-time">@usr.CreatedAt.ToString("HH:mm")</span>
                                </div>
                            </td>
                            <td>
                                <div class="date-display">
                                    @usr.UpdatedAt.ToString("dd/MM/yyyy")
                                    <span class="date-time">@usr.UpdatedAt.ToString("HH:mm")</span>
                                </div>
                            </td>
                            <td class="text-center">
                                <div class="d-flex justify-content-center">
                                    <a asp-action="Details" asp-route-id="@usr.Id"
                                       class="btn btn-outline-info btn-action"
                                       title="Ver detalles del usuario"
                                       data-bs-toggle="tooltip">
                                        <i class="fa fa-eye"></i>
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@usr.Id"
                                       class="btn btn-outline-primary btn-action"
                                       title="Editar usuario"
                                       data-bs-toggle="tooltip">
                                        <i class="fa fa-edit"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@usr.Id"
                                       class="btn btn-outline-danger btn-action"
                                       title="Eliminar usuario"
                                       data-bs-toggle="tooltip"
                                       onclick="return confirm('¿Está seguro de que desea eliminar este usuario?\n\nEsta acción no se puede deshacer.')">
                                        <i class="fa fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="empty-state">
                    <i class="fa fa-users"></i>
                    <h4>No hay usuarios registrados</h4>
                    <p>No se encontraron usuarios en el sistema.</p>
                    <a asp-action="Create" class="btn btn-success btn-lg">
                        <i class="fa fa-user-plus me-2"></i>Crear Primer Usuario
                    </a>
                </div>
            }
            </div>
        </div>
    </div>

    <!-- JavaScript para funcionalidad -->
    <script>
document.addEventListener('DOMContentLoaded', function() {
    // Inicializar tooltips
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
    });

    // Elementos de filtrado
    const searchInput = document.getElementById('searchInput');
    const statusFilter = document.getElementById('statusFilter');
    const recordCount = document.getElementById('recordCount');

    function filterUsers() {
        const searchTerm = searchInput.value.toLowerCase();
        const selectedStatus = statusFilter.value;

        const rows = document.querySelectorAll('.user-row');
        let visibleCount = 0;

        rows.forEach(row => {
            const email = row.dataset.email;
            const status = row.dataset.status;

            // Filtro de búsqueda por email
            const matchesSearch = !searchTerm || email.includes(searchTerm);

            // Filtro por estado
            const matchesStatus = !selectedStatus || status === selectedStatus;

            // Mostrar/ocultar fila
            if (matchesSearch && matchesStatus) {
                row.style.display = '';
                visibleCount++;
            } else {
                row.style.display = 'none';
            }
        });

        // Actualizar contador
        recordCount.textContent = `Mostrando ${visibleCount} usuarios`;

        // Mostrar mensaje si no hay resultados
        const tbody = document.querySelector('#usersTable tbody');
        const existingNoResults = document.querySelector('.no-results-message');

        if (visibleCount === 0 && !existingNoResults) {
            const noResultsRow = document.createElement('tr');
            noResultsRow.className = 'no-results-message';
            noResultsRow.innerHTML = `
                <td colspan="6" class="text-center py-5">
                    <i class="fa fa-search text-muted" style="font-size: 3rem; opacity: 0.3;"></i>
                    <h5 class="mt-3 text-muted">No se encontraron usuarios</h5>
                    <p class="text-muted">Intenta con otros términos de búsqueda</p>
                </td>
            `;
            tbody.appendChild(noResultsRow);
        } else if (visibleCount > 0 && existingNoResults) {
            existingNoResults.remove();
        }
    }

    // Event listeners para filtros
    if (searchInput) {
        searchInput.addEventListener('input', filterUsers);
        // Enfocar el campo de búsqueda al cargar la página
        searchInput.focus();
    }
    if (statusFilter) statusFilter.addEventListener('change', filterUsers);

    // Atajos de teclado
    document.addEventListener('keydown', function(e) {
        // Ctrl/Cmd + K para enfocar búsqueda
        if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
            e.preventDefault();
            searchInput.focus();
        }

        // Escape para limpiar filtros
        if (e.key === 'Escape') {
            clearFilters();
        }
    });
});

function clearFilters() {
    document.getElementById('searchInput').value = '';
    document.getElementById('statusFilter').value = '';

    // Remover mensaje de no resultados si existe
    const noResultsMessage = document.querySelector('.no-results-message');
    if (noResultsMessage) {
        noResultsMessage.remove();
    }

    // Disparar evento para actualizar filtros
    document.getElementById('searchInput').dispatchEvent(new Event('input'));

    // Enfocar el campo de búsqueda
    document.getElementById('searchInput').focus();
}

// Función para confirmar eliminación con más detalles
function confirmDelete(email) {
    return confirm(`¿Está seguro de que desea eliminar el usuario "${email}"?\n\nEsta acción no se puede deshacer y eliminará todos los datos asociados al usuario.`);
}
    </script>
