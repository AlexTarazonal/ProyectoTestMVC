@model IEnumerable<ProyectoTestMVC.Models.Alert>
    @{
    ViewData["Title"] = "Gestión de Alertas";
    }

    <style>
        .alerts-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 15px;
            color: white;
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .alerts-card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .table-modern {
            margin-bottom: 0;
        }

            .table-modern thead th {
                background: linear-gradient(135deg, #f8f9ff 0%, #e9ecef 100%);
                border: none;
                padding: 1rem;
                font-weight: 600;
                color: #495057;
                font-size: 0.875rem;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }

            .table-modern tbody tr {
                border: none;
                transition: all 0.3s ease;
            }

                .table-modern tbody tr:hover {
                    background: linear-gradient(135deg, #f8f9ff 0%, #fff5f5 100%);
                    transform: translateY(-2px);
                    box-shadow: 0 5px 15px rgba(0,0,0,0.08);
                }

            .table-modern tbody td {
                padding: 1rem;
                border: none;
                vertical-align: middle;
                border-bottom: 1px solid #f1f3f4;
            }

        .btn-modern {
            border-radius: 25px;
            padding: 0.5rem 1.5rem;
            font-weight: 500;
            transition: all 0.3s ease;
            border: none;
        }

        .btn-primary-modern {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

            .btn-primary-modern:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
            }

        .btn-action {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin: 0 2px;
            transition: all 0.3s ease;
        }

            .btn-action:hover {
                transform: translateY(-2px);
            }

        .btn-edit {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            border: none;
            color: white;
        }

        .btn-view {
            background: linear-gradient(135deg, #17a2b8 0%, #007bff 100%);
            border: none;
            color: white;
        }

        .btn-delete {
            background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
            border: none;
            color: white;
        }

        .badge-modern {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 500;
            font-size: 0.75rem;
        }

        .badge-success-modern {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
        }

        .badge-warning-modern {
            background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
            color: white;
        }

        .stats-card {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            margin-bottom: 1rem;
            transition: transform 0.3s ease;
        }

            .stats-card:hover {
                transform: translateY(-5px);
            }

        .stats-number {
            font-size: 2rem;
            font-weight: bold;
            color: #667eea;
        }

        .stats-label {
            color: #6c757d;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .search-box {
            border-radius: 25px;
            border: 1px solid #e9ecef;
            padding: 0.75rem 1.5rem;
            transition: all 0.3s ease;
        }

            .search-box:focus {
                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
                border-color: #667eea;
            }

        .empty-state {
            text-align: center;
            padding: 3rem;
            color: #6c757d;
        }

        .empty-icon {
            font-size: 4rem;
            color: #dee2e6;
            margin-bottom: 1rem;
        }
    </style>

    <div class="container-fluid py-4">
        <!-- Header -->
        <div class="alerts-header">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="h2 mb-2">🚨 Gestión de Alertas</h1>
                    <p class="mb-0 opacity-75">Monitorea y gestiona todas las alertas del sistema</p>
                </div>
                <div class="col-md-4 text-md-end">
                    <a asp-action="Create" class="btn btn-primary-modern btn-modern">
                        <i class="fas fa-plus me-2"></i>Nueva Alerta
                    </a>
                </div>
            </div>
        </div>

        <!-- Stats Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="stats-card">
                    <div class="stats-number">@Model.Count()</div>
                    <div class="stats-label">Total de Alertas</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <div class="stats-number text-success">@Model.Count(a => a.IsNotified)</div>
                    <div class="stats-label">Notificadas</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <div class="stats-number text-warning">@Model.Count(a => !a.IsNotified)</div>
                    <div class="stats-label">Pendientes</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <div class="stats-number text-info">@Model.Count(a => a.TriggeredAt.Date == DateTime.Today)</div>
                    <div class="stats-label">Hoy</div>
                </div>
            </div>
        </div>

        <!-- Search and Filters -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text bg-white border-end-0">
                        <i class="fas fa-search text-muted"></i>
                    </span>
                    <input type="text" class="form-control search-box border-start-0" placeholder="Buscar por producto o mensaje...">
                </div>
            </div>
            <div class="col-md-6 text-md-end">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-secondary btn-modern">Todas</button>
                    <button type="button" class="btn btn-outline-success btn-modern">Notificadas</button>
                    <button type="button" class="btn btn-outline-warning btn-modern">Pendientes</button>
                </div>
            </div>
        </div>

        <!-- Alerts Table -->
        <div class="alerts-card">
            @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-modern">
                    <thead>
                        <tr>
                            <th><i class="fas fa-cube me-2"></i>Producto</th>
                            <th><i class="fas fa-bolt me-2"></i>Disparada</th>
                            <th><i class="fas fa-bell me-2"></i>Estado</th>
                            <th><i class="fas fa-comment me-2"></i>Mensaje</th>
                            <th><i class="fas fa-calendar-plus me-2"></i>Creada</th>
                            <th><i class="fas fa-calendar-edit me-2"></i>Actualizada</th>
                            <th class="text-center"><i class="fas fa-cogs me-2"></i>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var alert in Model)
                        {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="bg-primary rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px;">
                                        <i class="fas fa-cube text-white"></i>
                                    </div>
                                    <div>
                                        <strong>Producto #@alert.ProductId</strong>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="text-muted small">@alert.TriggeredAt.ToString("dd/MM/yyyy")</div>
                                <div class="fw-bold">@alert.TriggeredAt.ToString("HH:mm")</div>
                            </td>
                            <td>
                                @if (alert.IsNotified)
                                    {
                                <span class="badge badge-success-modern">
                                    <i class="fas fa-check me-1"></i>Notificada
                                </span>
                                    }
                                    else
                                    {
                                <span class="badge badge-warning-modern">
                                    <i class="fas fa-clock me-1"></i>Pendiente
                                </span>
                                    }
                            </td>
                            <td>
                                <div class="text-truncate" style="max-width: 200px;" title="@alert.Message">
                                    @alert.Message
                                </div>
                            </td>
                            <td>
                                <small class="text-muted">@alert.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                            </td>
                            <td>
                                <small class="text-muted">@alert.UpdatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                            </td>
                            <td class="text-center">
                                <div class="d-flex justify-content-center">
                                    <a asp-action="Edit" asp-route-id="@alert.Id"
                                       class="btn btn-action btn-edit"
                                       title="Editar alerta"
                                       data-bs-toggle="tooltip">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@alert.Id"
                                       class="btn btn-action btn-view"
                                       title="Ver detalles"
                                       data-bs-toggle="tooltip">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@alert.Id"
                                       class="btn btn-action btn-delete"
                                       title="Eliminar alerta"
                                       data-bs-toggle="tooltip"
                                       onclick="return confirm('¿Estás seguro de que deseas eliminar esta alerta?')">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-bell-slash"></i>
                </div>
                <h3 class="h5 mb-3">No hay alertas disponibles</h3>
                <p class="mb-4">Parece que no tienes ninguna alerta en este momento.</p>
                <a asp-action="Create" class="btn btn-primary-modern btn-modern">
                    <i class="fas fa-plus me-2"></i>Crear Primera Alerta
                </a>
            </div>
        }
        </div>
    </div>

    <script>
        // Inicializar tooltips
        document.addEventListener('DOMContentLoaded', function () {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        // Funcionalidad de búsqueda simple
        document.querySelector('.search-box').addEventListener('input', function (e) {
            const searchTerm = e.target.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');

            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchTerm) ? '' : 'none';
            });
        });

        // Filtros por estado
        document.querySelectorAll('.btn-group .btn').forEach(btn => {
            btn.addEventListener('click', function () {
                // Remover clase activa de todos los botones
                document.querySelectorAll('.btn-group .btn').forEach(b => {
                    b.classList.remove('active');
                    b.classList.add('btn-outline-secondary');
                    b.classList.remove('btn-success', 'btn-warning', 'btn-secondary');
                });

                // Activar botón clickeado
                this.classList.add('active');
                this.classList.remove('btn-outline-secondary');

                const filter = this.textContent.trim();
                const rows = document.querySelectorAll('tbody tr');

                rows.forEach(row => {
                    const badge = row.querySelector('.badge');
                    if (filter === 'Todas') {
                        row.style.display = '';
                    } else if (filter === 'Notificadas' && badge && badge.textContent.includes('Notificada')) {
                        row.style.display = '';
                    } else if (filter === 'Pendientes' && badge && badge.textContent.includes('Pendiente')) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
        });
    </script>
